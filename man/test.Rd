% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test_result.R
\name{test_result}
\alias{test_result}
\title{Test the "Result" class}
\usage{
test_result(skip = NULL, ctx = get_default_context())
}
\arguments{
\item{skip}{\code{[character()]}\cr A list of test names to skip}

\item{ctx}{\code{[DBItest_context]}\cr A test context as created by
\code{\link{make_context}}.}
}
\description{
Test the "Result" class
}
\details{

This function defines the following tests:
\describe{
\item{\code{trivial_query}}{
Can issue trivial query, result object inherits from "DBIResult"
}
\item{\code{command_query}}{
Can issue a command query that creates a table
}
\item{\code{invalid_query}}{
Issuing an invalid query throws error (but no warnings, e.g. related to
  pending results, are thrown)
}
\item{\code{get_info}}{
Return value of dbGetInfo has necessary elements
}
\item{\code{show}}{
show method for result class is defined
}
\item{\code{fetch_single}}{
single-value queries can be fetched
}
\item{\code{fetch_multi_row_single_column}}{
multi-row single-column queries can be fetched
}
\item{\code{fetch_more_rows}}{
if more rows than available are fetched, the result is returned in full
  but no warning is issued
}
\item{\code{fetch_premature_close}}{
if less rows than available are fetched, the result is returned in full
  but no warning is issued; also tests the corner case of fetching zero
  rows
}
\item{\code{fetch_no_return_value}}{
side-effect-only queries (without return value) can be fetched
}
\item{\code{get_query_single}}{
single-value queries can be read with dbGetQuery
}
\item{\code{get_query_multi_row_single_column}}{
multi-row single-column queries can be read with dbGetQuery
}
\item{\code{get_query_single_column_multi_row}}{
single-row multi-column queries can be read with dbGetQuery
}
\item{\code{get_query_multi}}{
multi-row multi-column queries can be read with dbGetQuery
}
\item{\code{data_integer}}{
data conversion from SQL to R: integer
}
\item{\code{data_numeric}}{
data conversion from SQL to R: numeric
}
\item{\code{data_logical}}{
data conversion from SQL to R: logical
}
\item{\code{data_null}}{
data conversion from SQL to R: A NULL value is returned as NA
}
\item{\code{data_64_bit}}{
data conversion from SQL to R: 64-bit integers
}
\item{\code{data_character}}{
data conversion from SQL to R: character
}
\item{\code{data_date}}{
data conversion from SQL to R: date
}
\item{\code{data_time}}{
data conversion from SQL to R: time
}
\item{\code{data_time_parens}}{
data conversion from SQL to R: time (using alternative syntax with
parentheses for specifying time literals)
}
\item{\code{data_timestamp}}{
data conversion from SQL to R: timestamp
}
\item{\code{data_timestamp_utc}}{
data conversion from SQL to R: timestamp with time zone
}
\item{\code{data_timestamp_parens}}{
data conversion: timestamp (alternative syntax with parentheses
for specifying timestamp literals)
}
}
}
\seealso{
Other tests: \code{\link{test_all}},
  \code{\link{test_connection}}, \code{\link{test_driver}},
  \code{\link{test_getting_started}},
  \code{\link{test_sql}}
}

